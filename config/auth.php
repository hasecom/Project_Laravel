<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | このオプションは、デフォルトの認証「ガード」とパスワードを制御します
    | アプリケーションのリセットオプション。 これらのデフォルトを変更することができます
    | 必要に応じて、それらはほとんどのアプリケーションにとって完璧なスタートです。
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | 次に、アプリケーションのすべての認証ガードを定義することができます。
    | もちろん、素晴らしいデフォルト設定があなたのために定義されています
    | ここでは、セッションストレージとEloquentユーザープロバイダを使用します。
    | すべての認証ドライバには、ユーザープロバイダがあります。 これは、
    | ユーザーは実際にデータベースや他のストレージから取り出されます
    | このアプリケーションがユーザーのデータを保持するために使用するメカニズム。
    |
    | サポート： "セッション"、 "トークン"
    |
    */
//認証ガード
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'api' => [
            'driver' => 'token',
            'provider' => 'users',
        ],
    //h-追加 for admin
        'admin' =>[
            'driver' => 'session',
            'provider' => 'admins',
        ]
    ],


    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | すべての認証ドライバには、ユーザープロバイダがあります。 これは、
    | ユーザーは実際にデータベースや他のストレージから取り出されます
    | このアプリケーションがユーザーのデータを保持するために使用するメカニズム。
    |
    | 複数のユーザーテーブルまたはモデルを使用している場合は、複数
    | 各モデル/テーブルを表すソース。 これらの情報源は、
    | あなたが定義した余分な認証ガードに割り当てられます。
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\User::class,
        ],

        //h-追加-test
        'admins' => [
            'driver' => 'eloquent',
            'table' => App\Admin::class,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    | 複数のパスワードリセット設定を指定することができます
    | アプリケーションの1つのユーザーテーブルまたはモデルよりも多くの
    | 特定のユーザータイプに基づいて個別のパスワードリセット設定。
    | 有効期限は、リセットトークンが必要な分数です
    | 有効とみなされます。 このセキュリティ機能により、トークンは短命に保たれます。
    | 彼らは推測する時間が少なくなります。 これは必要に応じて変更することができます。
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_resets',
            'expire' => 60,
        ],
    ],

];
